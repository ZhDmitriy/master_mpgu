# -*- coding: utf-8 -*-
"""lesson_5.3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I2jfz7fABSYvQPf0_SI-hxvBQp4nB8_U
"""

import math

n = int(input("n = "))

def createMatrix(n: int) -> list:
  matrixFromSin = [[0] * n for i in range(n)]
  for i in range(1, n+1):
    for j in range(1, n+1):
      if i == 1:
        matrixFromSin[i-1][j-1] = 2*j  + 3
      if i == 2:
        matrixFromSin[i-1][j-1] = j - 3/(2+1/j)
  return matrixFromSin


def transformMatrix(createdUserMatrix: list) -> list:
  matrixLenght = len(createdUserMatrix)
  for i in range(matrixLenght-2):
    for j in range(matrixLenght):
        createdUserMatrix[i+2][j] = createdUserMatrix[i][j] \
        + createdUserMatrix[i+1][j]
  return createdUserMatrix


def calculateMeanValue(transformUserMatrix: list) -> float:
  minRowValue = 1000000
  maxColumnValue = -1000000
  for i in range(len(transformUserMatrix)):
    for j in range(len(transformUserMatrix)):
      if transformUserMatrix[i][j] < minRowValue:
        minRowValue = transformUserMatrix[i][j]
  for i in range(len(transformUserMatrix)):
    for j in range(len(transformUserMatrix)):
      if transformUserMatrix[j][i] > maxColumnValue:
        maxColumnValue = transformUserMatrix[j][i]
  return (minRowValue + maxColumnValue) / 2


if n > 10:
  print("n не может быть больше 10")
else:
  if n > 2:
    createdUserMatrix = createMatrix(n)
    transformUserMatrix = transformMatrix(createMatrix(n))
    responseUserRequest = calculateMeanValue(transformUserMatrix)
    print(responseUserRequest)
  else:
    print(createMatrix(n))

